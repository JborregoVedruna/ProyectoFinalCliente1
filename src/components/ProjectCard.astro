---
const page = 0;
const size = 10;
let jsonData = { content: [] };

interface Project {
  id: number;
  name: string;
  description: string;
  stateProjectName: string;
  start_date: Date;
}
try {
  const datos = await fetch(`http://localhost:8080/api/v1/projects?page=${page}&size=${size}`);
  if (!datos.ok) {
    throw new Error('Error en la respuesta de la API');
  }
  jsonData = await datos.json();
} catch (error) {
  console.error('Hubo un error al obtener los datos:', error);
}
---
<html>
  <head>
    <title>Proyectos</title>
  </head>
  <body class="bg-gray-100 p-6">
    <h1 class="text-4xl font-extrabold text-center text-gray-800 mb-8">Lista de Proyectos</h1>
    <div class="flex justify-center">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 w-full max-w-6xl">
        <ul class="w-full">
          {jsonData.content && jsonData.content.map((project: Project) => (
            <li  class="w-full max-w-2xl mx-auto my-6 bg-white rounded-lg shadow-md border border-gray-300">
              <div class="flex items-start p-6">
                <img src="https://via.placeholder.com/80" alt="Project Image" class="w-20 h-20 object-cover rounded-full border-2 border-gray-300 shadow-sm mr-6" />
                <div class="flex-grow text-left">
                  <!-- Título -->
                  <h2 class="text-2xl font-bold text-gray-800">{project.name}</h2>
                  <!-- Estado del Proyecto -->
                  <p class="text-lg font-semibold text-blue-500 mt-2">{project.stateProjectName}</p>
                </div>
              </div>
              <div class="px-6 pb-4 text-gray-700 text-left">
                <p class="text-base mt-2 leading-relaxed">{project.description}</p>
                <p class="text-sm mt-4">Fecha de creación: {new Date(project.start_date).toLocaleDateString()}</p>
              </div>
            </li>
          ))}
        </ul>
      </div>
    </div>
  </body>
</html>
